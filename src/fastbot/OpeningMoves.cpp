
#include "OpeningMoves.hpp"

using namespace fastbot;
using namespace std;

static const vector<pair<unsigned char, unsigned char>> moves1 = {
    {0, 20},  {1, 22},  {2, 8},   {3, 0},   {4, 3},   {5, 24},  {6, 18},  {7, 21},  {8, 24},
    {9, 47},  {10, 40}, {11, 44}, {12, 38}, {13, 40}, {14, 34}, {15, 28}, {16, 40}, {17, 44},
    {18, 55}, {19, 77}, {20, 70}, {21, 72}, {22, 59}, {23, 80}, {24, 72}, {25, 75}, {26, 80},
    {27, 2},  {28, 12}, {29, 24}, {30, 10}, {31, 23}, {32, 24}, {33, 0},  {34, 12}, {35, 8},
    {36, 27}, {37, 40}, {38, 44}, {39, 46}, {40, 30}, {41, 44}, {42, 36}, {43, 48}, {44, 34},
    {45, 56}, {46, 77}, {47, 78}, {48, 56}, {49, 68}, {50, 78}, {51, 56}, {52, 68}, {53, 60},
    {54, 1},  {55, 14}, {56, 25}, {57, 9},  {58, 14}, {59, 24}, {60, 10}, {61, 22}, {62, 8},
    {63, 46}, {64, 40}, {65, 44}, {66, 28}, {67, 32}, {68, 51}, {69, 36}, {70, 40}, {71, 33},
    {72, 64}, {73, 59}, {74, 61}, {75, 74}, {76, 58}, {77, 60}, {78, 63}, {79, 68}, {80, 60}};

static const vector<pair<unsigned char, unsigned char>> moves2 = {
    {30, 18}, {31, 12}, {32, 25}, {39, 27}, {41, 34}, {48, 74}, {49, 66}, {50, 78}};

static const vector<pair<pair<unsigned char, unsigned char>, unsigned char>> moves3 = {
    {{0, 60}, 18},  {{20, 30}, 10}, {{40, 0}, 2},   {{60, 30}, 9},  {{60, 31}, 4},  {{40, 1}, 14},
    {{0, 61}, 12},  {{20, 31}, 14}, {{60, 32}, 16}, {{40, 2}, 24},  {{0, 62}, 8},   {{20, 32}, 24},
    {{60, 39}, 46}, {{0, 69}, 38},  {{40, 9}, 28},  {{20, 39}, 28}, {{60, 40}, 50}, {{0, 70}, 40},
    {{40, 10}, 32}, {{20, 40}, 48}, {{0, 71}, 42},  {{60, 41}, 34}, {{40, 11}, 52}, {{20, 41}, 34},
    {{0, 78}, 72},  {{60, 48}, 64}, {{40, 18}, 72}, {{20, 48}, 64}, {{0, 79}, 58},  {{60, 49}, 66},
    {{40, 19}, 68}, {{20, 49}, 68}, {{60, 50}, 70}, {{40, 20}, 62}, {{0, 80}, 78},  {{20, 50}, 69},
    {{41, 33}, 20}, {{1, 57}, 20},  {{61, 57}, 19}, {{21, 54}, 0},  {{41, 34}, 4},  {{1, 58}, 4},
    {{61, 58}, 4},  {{21, 55}, 14}, {{41, 35}, 24}, {{1, 59}, 8},   {{21, 56}, 8},  {{61, 59}, 8},
    {{41, 42}, 28}, {{1, 66}, 28},  {{61, 66}, 28}, {{21, 63}, 46}, {{1, 67}, 40},  {{41, 43}, 50},
    {{21, 64}, 40}, {{61, 67}, 40}, {{1, 68}, 52},  {{41, 51}, 72}, {{21, 65}, 42}, {{61, 68}, 42},
    {{1, 75}, 55},  {{21, 73}, 66}, {{41, 52}, 58}, {{61, 75}, 54}, {{1, 76}, 68},  {{21, 74}, 80},
    {{41, 53}, 79}, {{61, 76}, 58}, {{1, 77}, 62},  {{22, 6}, 20},  {{42, 27}, 19}, {{61, 77}, 70},
    {{2, 6}, 20},   {{22, 7}, 12},  {{42, 28}, 22}, {{62, 6}, 10},  {{22, 8}, 24},  {{2, 7}, 12},
    {{42, 29}, 26}, {{62, 7}, 12},  {{2, 15}, 46},  {{22, 15}, 46}, {{42, 37}, 40}, {{62, 15}, 46},
    {{2, 16}, 40},  {{22, 16}, 40}, {{42, 38}, 52}, {{62, 16}, 40}, {{2, 17}, 52},  {{42, 45}, 56},
    {{22, 17}, 44}, {{62, 17}, 34}, {{2, 24}, 73},  {{42, 46}, 58}, {{22, 24}, 64}, {{62, 24}, 54},
    {{42, 47}, 62}, {{22, 25}, 68}, {{2, 25}, 76},  {{62, 25}, 66}, {{43, 54}, 10}, {{2, 26}, 70},
    {{22, 26}, 69}, {{62, 26}, 60}, {{43, 55}, 12}, {{23, 60}, 0},  {{3, 1}, 12},   {{63, 57}, 0},
    {{43, 56}, 8},  {{23, 61}, 12}, {{3, 2}, 26},   {{63, 58}, 12}, {{43, 63}, 28}, {{3, 9}, 46},
    {{23, 62}, 16}, {{63, 59}, 8},  {{43, 64}, 32}, {{3, 10}, 40},  {{23, 69}, 46}, {{63, 66}, 28},
    {{43, 65}, 34}, {{3, 11}, 44},  {{23, 70}, 40}, {{63, 67}, 40}, {{43, 72}, 64}, {{3, 18}, 74},
    {{23, 71}, 42}, {{63, 68}, 44}, {{43, 73}, 58}, {{23, 78}, 64}, {{3, 19}, 66},  {{63, 75}, 64},
    {{43, 74}, 70}, {{23, 79}, 58}, {{3, 20}, 78},  {{63, 76}, 58}, {{44, 3}, 20},  {{24, 54}, 20},
    {{4, 0}, 20},   {{63, 77}, 60}, {{44, 4}, 22},  {{4, 1}, 12},   {{24, 55}, 12}, {{64, 30}, 2},
    {{44, 5}, 24},  {{4, 2}, 8},    {{24, 56}, 25}, {{64, 31}, 12}, {{44, 12}, 46}, {{4, 9}, 36},
    {{24, 63}, 46}, {{64, 32}, 6},  {{44, 13}, 40}, {{4, 10}, 40},  {{24, 64}, 40}, {{64, 39}, 46},
    {{44, 14}, 52}, {{4, 11}, 52},  {{24, 65}, 52}, {{64, 41}, 52}, {{44, 21}, 56}, {{4, 18}, 56},
    {{24, 73}, 66}, {{64, 48}, 56}, {{44, 22}, 58}, {{4, 19}, 68},  {{24, 74}, 60}, {{64, 49}, 68},
    {{44, 23}, 80}, {{4, 20}, 80},  {{25, 54}, 0},  {{64, 50}, 60}, {{45, 6}, 18},  {{5, 54}, 18},
    {{65, 33}, 20}, {{25, 55}, 12}, {{45, 7}, 22},  {{5, 55}, 14},  {{25, 56}, 24}, {{65, 34}, 4},
    {{45, 8}, 24},  {{5, 56}, 15},  {{25, 63}, 38}, {{65, 35}, 16}, {{45, 15}, 38}, {{5, 63}, 38},
    {{25, 64}, 40}, {{65, 42}, 28}, {{45, 16}, 40}, {{5, 64}, 40},  {{65, 43}, 40}, {{25, 65}, 52},
    {{45, 17}, 34}, {{5, 65}, 44},  {{25, 72}, 63}, {{65, 51}, 54}, {{45, 24}, 54}, {{5, 72}, 56},
    {{25, 73}, 76}, {{65, 52}, 58}, {{45, 25}, 58}, {{5, 73}, 66},  {{25, 74}, 80}, {{65, 53}, 70},
    {{45, 26}, 70}, {{5, 74}, 60},  {{26, 60}, 0},  {{66, 3}, 20},  {{46, 60}, 20}, {{6, 54}, 9},
    {{26, 61}, 22}, {{66, 4}, 22},  {{46, 61}, 14}, {{6, 55}, 12},  {{26, 62}, 24}, {{66, 5}, 24},
    {{46, 62}, 8},  {{6, 56}, 24},  {{26, 69}, 46}, {{66, 12}, 46}, {{46, 69}, 38}, {{6, 63}, 28},
    {{26, 70}, 40}, {{66, 13}, 40}, {{46, 70}, 40}, {{6, 64}, 40},  {{26, 71}, 42}, {{66, 14}, 52},
    {{46, 71}, 34}, {{6, 65}, 42},  {{26, 78}, 72}, {{66, 21}, 64}, {{46, 78}, 72}, {{6, 72}, 54},
    {{26, 79}, 66}, {{66, 22}, 68}, {{46, 79}, 76}, {{6, 73}, 76},  {{27, 6}, 1},   {{66, 23}, 60},
    {{46, 80}, 69}, {{6, 74}, 69},  {{27, 7}, 22},  {{67, 6}, 18},  {{47, 54}, 20}, {{7, 54}, 20},
    {{27, 8}, 25},  {{67, 7}, 14},  {{47, 55}, 12}, {{7, 55}, 12},  {{27, 15}, 46}, {{67, 8}, 7},
    {{47, 56}, 8},  {{7, 56}, 17},  {{27, 16}, 40}, {{67, 15}, 28}, {{47, 63}, 46}, {{7, 63}, 36},
    {{27, 17}, 52}, {{67, 16}, 30}, {{47, 64}, 40}, {{7, 64}, 40},  {{27, 24}, 72}, {{67, 17}, 34},
    {{47, 65}, 44}, {{7, 65}, 52},  {{27, 25}, 68}, {{67, 24}, 64}, {{47, 72}, 56}, {{7, 72}, 64},
    {{27, 26}, 60}, {{67, 25}, 66}, {{47, 73}, 58}, {{7, 73}, 68},  {{28, 27}, 20}, {{67, 26}, 70},
    {{47, 74}, 79}, {{7, 74}, 60},  {{28, 29}, 8},  {{68, 54}, 11}, {{48, 6}, 20},  {{8, 54}, 0},
    {{28, 36}, 46}, {{68, 55}, 14}, {{48, 7}, 14},  {{8, 55}, 4},   {{28, 37}, 40}, {{68, 56}, 8},
    {{48, 8}, 26},  {{8, 56}, 6},   {{28, 38}, 42}, {{68, 63}, 28}, {{48, 15}, 38}, {{8, 63}, 46},
    {{28, 45}, 72}, {{68, 64}, 40}, {{48, 16}, 30}, {{8, 64}, 40},  {{28, 46}, 58}, {{68, 65}, 52},
    {{48, 17}, 52}, {{8, 65}, 34},  {{28, 47}, 60}, {{68, 72}, 56}, {{48, 24}, 74}, {{8, 72}, 73},
    {{29, 54}, 10}, {{68, 73}, 66}, {{48, 25}, 66}, {{8, 73}, 68},  {{29, 55}, 4},  {{68, 74}, 62},
    {{48, 26}, 70}, {{8, 74}, 69},  {{29, 56}, 25}, {{69, 27}, 11}, {{49, 33}, 0},  {{9, 60}, 20},
    {{29, 63}, 28}, {{69, 28}, 14}, {{49, 34}, 4},  {{9, 61}, 14},  {{29, 64}, 40}, {{69, 29}, 7},
    {{49, 35}, 24}, {{9, 62}, 16},  {{29, 65}, 34}, {{69, 37}, 40}, {{49, 42}, 46}, {{9, 69}, 46},
    {{29, 72}, 56}, {{69, 38}, 52}, {{49, 43}, 48}, {{9, 70}, 40},  {{29, 73}, 68}, {{69, 45}, 56},
    {{49, 44}, 42}, {{9, 71}, 52},  {{29, 74}, 70}, {{69, 46}, 76}, {{49, 51}, 72}, {{9, 78}, 72},
    {{30, 31}, 23}, {{69, 47}, 60}, {{49, 52}, 66}, {{9, 79}, 76},  {{30, 32}, 16}, {{70, 30}, 0},
    {{49, 53}, 60}, {{9, 80}, 71},  {{30, 39}, 28}, {{70, 31}, 12}, {{50, 54}, 0},  {{10, 30}, 18},
    {{30, 40}, 50}, {{70, 32}, 8},  {{50, 55}, 14}, {{10, 31}, 14}, {{30, 41}, 42}, {{70, 39}, 28},
    {{50, 56}, 24}, {{10, 32}, 24}, {{30, 48}, 64}, {{70, 41}, 52}, {{50, 63}, 46}, {{10, 39}, 46},
    {{30, 49}, 57}, {{70, 48}, 74}, {{50, 64}, 48}, {{10, 41}, 52}, {{30, 50}, 80}, {{70, 49}, 66},
    {{50, 65}, 52}, {{10, 48}, 74}, {{31, 60}, 20}, {{70, 50}, 78}, {{50, 72}, 64}, {{10, 49}, 76},
    {{31, 61}, 22}, {{71, 0}, 1},   {{50, 73}, 66}, {{10, 50}, 78}, {{31, 62}, 24}, {{71, 1}, 14},
    {{50, 74}, 79}, {{11, 33}, 20}, {{31, 69}, 46}, {{71, 2}, 8},   {{51, 6}, 0},   {{11, 34}, 22},
    {{31, 70}, 50}, {{71, 9}, 36},  {{51, 7}, 4},   {{11, 35}, 15}, {{31, 71}, 34}, {{71, 10}, 40},
    {{51, 8}, 24},  {{11, 42}, 46}, {{31, 78}, 65}, {{71, 11}, 34}, {{51, 15}, 36}, {{11, 43}, 40},
    {{31, 79}, 66}, {{71, 18}, 72}, {{51, 16}, 40}, {{11, 51}, 56}, {{31, 80}, 60}, {{71, 19}, 66},
    {{51, 17}, 42}, {{32, 54}, 0},  {{11, 52}, 66}, {{71, 20}, 60}, {{51, 24}, 55}, {{32, 55}, 22},
    {{11, 53}, 79}, {{72, 30}, 20}, {{51, 25}, 66}, {{32, 56}, 25}, {{12, 33}, 10}, {{72, 31}, 14},
    {{51, 26}, 70}, {{32, 63}, 29}, {{12, 34}, 14}, {{72, 32}, 8},  {{52, 33}, 20}, {{32, 64}, 50},
    {{12, 35}, 24}, {{72, 39}, 46}, {{52, 34}, 22}, {{32, 65}, 34}, {{12, 42}, 36}, {{72, 40}, 50},
    {{52, 35}, 17}, {{32, 72}, 56}, {{12, 43}, 40}, {{72, 41}, 44}, {{52, 42}, 46}, {{32, 73}, 68},
    {{12, 44}, 42}, {{72, 48}, 63}, {{52, 43}, 40}, {{32, 74}, 60}, {{12, 51}, 55}, {{72, 49}, 68},
    {{52, 44}, 33}, {{33, 1}, 12},  {{12, 52}, 58}, {{72, 50}, 60}, {{52, 51}, 54}, {{33, 2}, 24},
    {{12, 53}, 80}, {{73, 6}, 20},  {{52, 53}, 60}, {{33, 9}, 28},  {{13, 30}, 18}, {{73, 7}, 14},
    {{53, 0}, 19},  {{33, 10}, 40}, {{13, 31}, 12}, {{73, 8}, 17},  {{53, 1}, 22},  {{33, 11}, 52},
    {{13, 32}, 6},  {{73, 15}, 28}, {{53, 2}, 8},   {{33, 18}, 72}, {{13, 39}, 46}, {{73, 16}, 40},
    {{53, 9}, 28},  {{33, 19}, 76}, {{13, 41}, 42}, {{73, 17}, 52}, {{53, 10}, 40}, {{33, 20}, 78},
    {{13, 48}, 54}, {{73, 24}, 56}, {{53, 11}, 42}, {{34, 27}, 20}, {{13, 49}, 68}, {{73, 25}, 68},
    {{53, 18}, 74}, {{34, 28}, 14}, {{13, 50}, 78}, {{73, 26}, 70}, {{53, 19}, 76}, {{34, 29}, 8},
    {{74, 3}, 20},  {{14, 3}, 20},  {{53, 20}, 61}, {{34, 36}, 28}, {{74, 4}, 12},  {{14, 4}, 22},
    {{54, 3}, 2},   {{34, 37}, 40}, {{74, 5}, 15},  {{14, 5}, 24},  {{54, 4}, 12},  {{34, 38}, 52},
    {{14, 12}, 28}, {{74, 12}, 28}, {{54, 5}, 17},  {{34, 45}, 72}, {{74, 13}, 40}, {{14, 13}, 40},
    {{54, 12}, 28}, {{34, 46}, 58}, {{74, 14}, 34}, {{14, 21}, 74}, {{54, 13}, 40}, {{34, 47}, 60},
    {{74, 21}, 56}, {{14, 22}, 68}, {{54, 14}, 34}, {{35, 6}, 20},  {{74, 22}, 66}, {{14, 23}, 80},
    {{54, 21}, 56}, {{35, 7}, 22},  {{74, 23}, 70}, {{15, 3}, 20},  {{54, 22}, 66}, {{35, 15}, 46},
    {{75, 60}, 20}, {{15, 4}, 22},  {{54, 23}, 60}, {{35, 16}, 40}, {{75, 61}, 12}, {{15, 5}, 24},
    {{55, 33}, 0},  {{35, 17}, 34}, {{75, 62}, 6},  {{15, 12}, 46}, {{55, 34}, 12}, {{35, 24}, 72},
    {{75, 69}, 38}, {{15, 13}, 40}, {{55, 35}, 8},  {{35, 25}, 76}, {{75, 70}, 40}, {{15, 14}, 34},
    {{55, 42}, 36}, {{35, 26}, 70}, {{75, 71}, 34}, {{15, 21}, 72}, {{55, 43}, 40}, {{36, 0}, 20},
    {{75, 78}, 56}, {{15, 22}, 66}, {{55, 44}, 34}, {{36, 1}, 4},   {{75, 79}, 66}, {{15, 23}, 80},
    {{55, 51}, 56}, {{36, 2}, 16},  {{75, 80}, 62}, {{16, 30}, 1},  {{55, 52}, 66}, {{36, 9}, 28},
    {{76, 3}, 20},  {{16, 31}, 12}, {{55, 53}, 60}, {{36, 10}, 40}, {{76, 4}, 14},  {{16, 32}, 15},
    {{56, 57}, 18}, {{36, 11}, 34}, {{76, 5}, 24},  {{16, 39}, 46}, {{56, 58}, 14}, {{36, 18}, 64},
    {{76, 12}, 28}, {{16, 41}, 35}, {{56, 59}, 16}, {{36, 19}, 68}, {{76, 13}, 40}, {{16, 48}, 74},
    {{56, 66}, 38}, {{36, 20}, 70}, {{76, 14}, 42}, {{16, 49}, 66}, {{56, 67}, 40}, {{37, 30}, 2},
    {{76, 21}, 72}, {{16, 50}, 80}, {{56, 68}, 44}, {{37, 31}, 14}, {{76, 22}, 59}, {{17, 33}, 0},
    {{56, 75}, 64}, {{37, 32}, 8},  {{76, 23}, 60}, {{17, 34}, 22}, {{56, 76}, 58}, {{37, 39}, 28},
    {{77, 0}, 1},   {{17, 35}, 16}, {{56, 77}, 70}, {{37, 41}, 52}, {{77, 1}, 14},  {{17, 42}, 46},
    {{57, 27}, 18}, {{37, 48}, 74}, {{77, 2}, 24},  {{17, 43}, 40}, {{57, 28}, 12}, {{37, 49}, 59},
    {{77, 9}, 46},  {{17, 51}, 54}, {{57, 29}, 24}, {{37, 50}, 62}, {{77, 10}, 40}, {{17, 52}, 66},
    {{57, 36}, 38}, {{38, 33}, 0},  {{77, 11}, 42}, {{17, 53}, 70}, {{57, 37}, 40}, {{38, 34}, 22},
    {{77, 18}, 65}, {{18, 3}, 20},  {{57, 38}, 34}, {{38, 35}, 8},  {{77, 19}, 66}, {{18, 4}, 22},
    {{57, 45}, 74}, {{38, 42}, 28}, {{77, 20}, 78}, {{18, 5}, 24},  {{57, 46}, 68}, {{38, 43}, 40},
    {{78, 27}, 11}, {{18, 12}, 38}, {{57, 47}, 62}, {{38, 51}, 72}, {{78, 28}, 12}, {{18, 13}, 40},
    {{58, 33}, 2},  {{38, 52}, 58}, {{78, 29}, 6},  {{18, 14}, 52}, {{58, 34}, 12}, {{38, 53}, 60},
    {{78, 36}, 28}, {{18, 21}, 64}, {{58, 35}, 24}, {{39, 57}, 0},  {{78, 37}, 40}, {{18, 22}, 66},
    {{58, 42}, 28}, {{39, 58}, 12}, {{78, 38}, 34}, {{18, 23}, 80}, {{58, 43}, 40}, {{39, 59}, 8},
    {{78, 45}, 54}, {{19, 60}, 20}, {{58, 44}, 42}, {{39, 66}, 28}, {{78, 46}, 58}, {{19, 61}, 14},
    {{58, 51}, 56}, {{39, 67}, 30}, {{78, 47}, 60}, {{19, 62}, 15}, {{58, 52}, 66}, {{39, 68}, 42},
    {{79, 33}, 0},  {{19, 69}, 38}, {{58, 53}, 61}, {{39, 75}, 56}, {{79, 34}, 14}, {{19, 70}, 40},
    {{59, 54}, 2},  {{39, 76}, 58}, {{79, 35}, 24}, {{19, 71}, 42}, {{59, 55}, 14}, {{39, 77}, 80},
    {{79, 42}, 28}, {{19, 78}, 72}, {{59, 56}, 15}, {{79, 43}, 40}, {{19, 79}, 76}, {{59, 63}, 38},
    {{79, 44}, 42}, {{19, 80}, 71}, {{59, 64}, 40}, {{79, 51}, 72}, {{59, 65}, 44}, {{79, 52}, 66},
    {{59, 72}, 56}, {{79, 53}, 60}, {{59, 73}, 68}, {{80, 0}, 2},   {{59, 74}, 60}, {{80, 1}, 22},
    {{80, 2}, 8},   {{80, 9}, 46},  {{80, 10}, 40}, {{80, 11}, 34}, {{80, 18}, 56}, {{80, 19}, 68},
    {{80, 20}, 78}};

static unsigned countNumMovesMade(const State &state) {
  unsigned result = 0;
  for (unsigned i = 0; i < NUM_CELLS; i++) {
    if (state.GetCellState(i) != CellState::EMPTY) {
      result++;
    }
  }
  return result;
}

bool openingmoves::HaveActionFor(const State &state) { return countNumMovesMade(state) <= 3; }

Action openingmoves::GetActionFor(const State &state) {
  unsigned numMovesMade = countNumMovesMade(state);

  switch (numMovesMade) {
  case 0:
    return Action(40);
  case 1:
    return state.GetCellState(40) == CellState::EMPTY ? Action(40) : Action(10);
  case 2:
    assert(static_cast<unsigned char>(state.GetCellState(40)) == state.GetMySymbol());
    for (const auto &m : moves2) {
      if (state.GetCellState(m.first) != CellState::EMPTY) {
        return Action(m.second);
      }
    }
    break;
  case 3:
    assert(static_cast<unsigned char>(state.GetCellState(40)) == state.GetMySymbol() ||
           static_cast<unsigned char>(state.GetCellState(10)) == state.GetMySymbol());
    CellState opponentSymbol =
        (state.GetMySymbol() == static_cast<unsigned char>(CellState::NAUGHT)) ? CellState::CROSS
                                                                               : CellState::NAUGHT;
    for (const auto &m : moves3) {
      if (state.GetCellState(m.first.first) == opponentSymbol &&
          state.GetCellState(m.first.second) == opponentSymbol &&
          state.GetCellState(m.second) == CellState::EMPTY) {
        return Action(m.second);
      }
    }
    break;
  }
  return Action(100);
}
